document.addEventListener('DOMContentLoaded', () => {
    if(document.querySelector('.js-awardsZoom')) {
        let awardsZoom = document.querySelectorAll('.js-awardsZoom');
        awardsZoom.forEach(function(elem) {
            function showAwards() {
                let awardsSrc = elem.getAttribute('data-awards');
                let awardsName = elem.closest('.js-awardsItem').querySelector('.js-awardsName').innerText;
                let awardsYear = elem.closest('.js-awardsItem').querySelector('.js-awardsYear').innerText;
                $('body').prepend('<div class="awards__zoom"><div class="awards__zoom-wrapper"><div class="awards__zoom-img"><div class="awards__zoom-close js-awardsClose"></div><img src="'+ awardsSrc + '" alt="награда"></div><div class="awards__zoom-text"><p>'+ awardsYear + '</p><p>'+ awardsName + '</p></div></div></div>');
                wrapperFixPosition();
            }
        elem.addEventListener("click", showAwards);
        })
    }
    document.querySelector('body').addEventListener('click', function(event) {
    if (event.target.classList.contains('js-awardsClose') === true) {
            $('div.awards__zoom').remove();
            wrapperUnfixPosition();
    }
    });
    document.querySelector('body').addEventListener('click', function(event) {
    if (event.target.classList.contains('awards__zoom') === true && document.querySelector('.awards__zoom-wrapper')) {
        $('div.awards__zoom').remove();
        wrapperUnfixPosition();
    }
    });
    document.addEventListener('keydown', function(e) {
        if( e.keyCode == 27 && document.querySelector('.awards__zoom')) { 
            $('div.awards__zoom').remove();
            wrapperUnfixPosition();
        }
    });
});
document.addEventListener('DOMContentLoaded', () => {
  $(function () {
/*         $(window).resize(function () {
          if($('.js-menuBurger').css('display') !== 'none' && !$('.js-menu').hasClass('slinky-menu')) {
            let slinky = $('.js-menu').slinky({
              title: true
            });
          }
        });
    if($('.js-menuBurger').css('display') !== 'none') {
      let slinky = $('.js-menu').slinky({
        title: true
      });
    } */
    
    $('.js-menuBurger').click(function() {
        $(this).toggleClass('active');
       
        $('.js-menuWrap').toggleClass('active');
        $('.js-menu').toggleClass('active');
      });
      
      

    const hiddenScroll = () => {
      const scrollY = document.documentElement.style.getPropertyValue('--scroll-y');
      const body = document.body;
      body.style.position = 'fixed';
      body.style.top = `-${scrollY}`;
    };
    const addScroll = () => {
      const body = document.body;
      const scrollY = body.style.top;
      body.style.position = '';
      body.style.top = '';
      window.scrollTo(0, parseInt(scrollY || '0') * -1);
    }
    window.addEventListener('scroll', () => {
      document.documentElement.style.setProperty('--scroll-y', `${window.scrollY}px`);
    });

  //     $('.js-menuBurger').click(() => {
  //         $('.menu__wrapper').toggleClass('menu__wrapper_active')
  // })
  //
  //     $('.js-menuBurger').click(() => {
  //         $('.js-menuBurger').toggleClass('menu-burger_active')
  // })
      const items = document.querySelectorAll('.production-menu__item');
      const submenu = document.querySelectorAll('.production-submenu');
      const rightside = document.querySelector('._right-side');


      for (let i = 0; i < items.length; i++) {
          items[i].addEventListener('click', function () {
              for (let j = 0; j < submenu.length; j++) {
                  submenu[j].classList.add('hidden')
              }
              submenu[i].classList.remove('hidden')
          })
      }
  });
  $('.js-menuCategory').click(function() {
    $(this).toggleClass('active');
  });
});


$(".menu__wrapper").click(function () {
  
  $(".js-menuBurger").toggleClass("active");
  $('.js-menuWrap').toggleClass('active');
  $('.js-menu').toggleClass('active');
  
});
  

document.addEventListener('DOMContentLoaded', () => {
    function hasClass(elem, className) {
        return elem.classList.contains(className);
    }
    if(document.querySelector('.js-certificateZoom')) {
        let certificateZoom = document.querySelectorAll('.js-certificateZoom');
        certificateZoom.forEach(function(elem) {
            function showCertificate() {
                let certificateSrc = elem.closest('.js-certificateItem').getAttribute('data-image');
                let certificateName = elem.closest('.js-certificateItem').querySelector('.js-certificateName').innerText;
                $('body').prepend('<div class="awards__zoom"><div class="awards__zoom-wrapper"><div class="awards__zoom-img"><div class="awards__zoom-close js-awardsClose"></div><img src="'+ certificateSrc + '" alt="сертификат"></div><div class="awards__zoom-text"><p>'+ certificateName + '</p></div></div></div>');
                wrapperFixPosition();
            }
        elem.addEventListener("click", showCertificate);
        })
    }
    document.querySelector('body').addEventListener('click', function(event) {
    if (event.target.classList.contains('js-awardsClose') === true) {
            $('div.awards__zoom').remove();
            wrapperUnfixPosition();
    }
    });
    document.addEventListener('keydown', function(e) {
        if( e.keyCode == 27 && document.querySelector('.awards__zoom')) { 
            $('div.awards__zoom').remove();
            wrapperUnfixPosition();
        }
    });
    document.addEventListener('click', function(e) {
        if (hasClass(e.target, 'js-certificateZoom')) {
            let certificateSrc = e.target.closest('.js-certificateItem').getAttribute('data-image');
            let certificateName = e.target.closest('.js-certificateItem').querySelector('.js-certificateName').innerText;
            $('body').prepend('<div class="awards__zoom"><div class="awards__zoom-wrapper"><div class="awards__zoom-img"><div class="awards__zoom-close js-awardsClose"></div><img src="'+ certificateSrc + '" alt="сертификат"></div><div class="awards__zoom-text"><p>'+ certificateName + '</p></div></div></div>');
            wrapperFixPosition();
        }
    }, false);
});
$( document ).ready(function() {
    $('.js-question').on('click', function() {
        $(this).toggleClass('open');
        $(this).closest('li').toggleClass('open');
    })
});
    var preloader = {
        start: function() {
            $('body').prepend('<section class="preloader"><div class="banter-loader__wrap"><div class="banter-loader"><div class="banter-loader__box"></div><div class="banter-loader__box"></div><div class="banter-loader__box"></div><div class="banter-loader__box"></div><div class="banter-loader__box"></div><div class="banter-loader__box"></div><div class="banter-loader__box"></div><div class="banter-loader__box"></div><div class="banter-loader__box"></div></div></div></section>');
        },
        stop: function() {
            $('section.preloader').remove();
        }
    }

    function getURLVar(key) {
        var value = [];

        var query = String(document.location).split('?');

        if (query[1]) {
            const part = query[1].split('&');

            for (i = 0; i < part.length; i++) {
                var data = part[i].split('=');

                if (data[0] && data[1]) {
                    value[data[0]] = data[1];
                }
            }

            if (value[key]) {
                return value[key];
            } else if ($key == undefined) {
                return value;
            } else {
                return '';
            }
        }
    }

    $(function () {

        /*
        Прелоадер для пагинации
        */
        $('.pagination li a').click(function () {
            preloader.start();
        });

        /*
        Имитация плайсхолдера
        */
        $(".fw-placeholder").each(function () {
            $(this).find('*[value]').each(function () {
                $(this).val() ? $(this).parents('.fw-placeholder').addClass('active') : false
            });
        });
        $(".fw-placeholder > *").on('focusout keyup', function () {
            if ($(this).val() === "" || $(this).val() === '+7(___)-___-__-__') {
                $(this).parent().removeClass('active');
            } else {
                $(this).parent().addClass('active');
            }
        });

        $('.page iframe').each(function () {
            // height =
            // $(this).height($(this).height()*($(this).parent().width()/$(this).height()));
            $(this).attr('height', $(this).height() * ($(this).parent().width() / $(this).width()));
            $(this).attr('width', $(this).parent().width());
        });

        /*
        Клик по бургеру
        */
        $('.mobile-menu').click(function () {
            $(".header").toggleClass("show-menu");
        });

        /*
        Аккардион
        */
        $('.spoiler-title,.spoiler > .fa-angle-down').click(function () {
            $(this).parent().toggleClass('open');
            $(this).parent().find('div.spoiler-content').slideToggle();
            return false;
        });

        /*
        Фиксация навигации при поркуртке
        */
        var tempScrollTop, currentScrollTop = $(window).scrollTop();

        $(window).on('scroll load', function () {
            if ($('section.preloader').length == 0) {
                currentScrollTop = $(window).scrollTop();
                if (currentScrollTop > $('.burger').height() && !$('body').hasClass('hidden')) {
                    $('body').addClass('fixed-header');
                    if (tempScrollTop < currentScrollTop) {
                        $('.burger').removeClass('show');
                        $('.header').removeClass('show');
                        
                    } else if (tempScrollTop > currentScrollTop) {
                        $('.header').addClass('show');
                        $('.burger').addClass('show');
                    }
                } else {
                    $('body').removeClass('fixed-header');
                    $('.header').removeClass('show');
                    $('.burger').removeClass('show');
                }

                tempScrollTop = currentScrollTop;
            }
        });

        function number_format(number, decimals, dec_point, separator) {
            number = (number + '').replace(/[^0-9+\-Ee.]/g, '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof separator === 'undefined') ? ',' : separator,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + (Math.round(n * k) / k)
                        .toFixed(prec);
                };
            // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))
                .split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '')
                .length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1)
                    .join('0');
            }
            return s.join(dec);
        }

        /*
        Загрузка динамических блоков
        */
        $('body').on('click', '[class *= "load--"]', function (evt) {
            var loadBtn = $(this);

            if (loadBtn.hasClass('disabled')) {
                return false;
            }

            var tpl = String(loadBtn.attr('class').split(' ').filter(function (e) {
                return e.indexOf('load--') !== -1;
            })).replace("load--", "");

            $.ajax({
                url: '/includes/' + tpl + '.php',
                type: "GET",
                contentType: false,
                processData: false,
                dataType: 'html',
                beforeSend: function () {
                    loadBtn.addClass('disabled');
                },
                success: function (data) {
                    $('body').append('<section class="float-box ' + tpl + '"><div class="float-box_inset">' + data + '</div><div class="exit"></div></section>');
                    if ($('section.float-box form').length > 0) {
                        $('section.float-box form').parents('.float-box').addClass('form');
                    } else {
                        $('section.float-box').addClass('page');
                    }
                    setTimeout(function () {
                        $('section.float-box').addClass('show');
                    }, 700);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                /*
                    $('.popup__inner').append('<h2 style="text-align:center">Error</h2>');
                    $(".popup--load").fadeIn(100);
                */
                },
                complete: function () {
                    loadBtn.removeClass('disabled');
                }
            });
            return false;
        });

        $('body').click(function (event) {
            if ($(event.target).hasClass('float-box') || $(event.target).hasClass('exit')) {

                if ($(event.target).hasClass('exit')) {
                    var box = $(event.target).parents(".float-box");
                } else if ($(event.target).hasClass('float-box')) {
                    var box = $(event.target);
                }

                if (box !== undefined) {
                    box.find(".exit").css('display', "none");
                    box.find(".float-box_inset").css('right', '-110%');
                    setTimeout(function () {
                        box.remove();
                    }, 500);
                }

            }
        });

        /*
        Отправка формы AJAX + валидация формы
        */

        $('body').on('submit', '.sendler', function () {
            var form = $(this);
    // Проверка полей формы
            var classError = 'wrong';
            var checkedGroups = ',';

            function checkFullness(handle) {
                var error = true;
                var attribute = String($(handle).attr('class').split(' ').filter(function (e) {
                    return e.indexOf('required') !== -1
                }));

                if (attribute.indexOf('group') === 0) {
                    attribute = attribute.substring(9);
                }

                var required = true;//флаг обязательности
                if (attribute.indexOf('Y') === -1) {
                    required = false;
                }
                var format = attribute;//проверка на формат
                if (required)
                    format = attribute.substr(2);
                switch ($(handle).attr('type')) {
                    case 'checkbox':
                        if (!$(handle).prop('checked')) {
                            error = false;
                        }
                        break;
                    case 'radio':
                        if (!$(handle).prop('checked') && $('[name="' + $(handle).attr('name') + '"]:checked').length == 0) {
                            error = false;
                        } else {
                            error = 'radio';
                        }
                        break;
                    default:
                        if ($(handle).val().trim().length == 0 || $(handle).val() == '0') {
                            if (required) error = false;
                        } else {
                            if (format === 'required-num') {
                                var regCheck = new RegExp('[^0-9\s-]+');
                                if (regCheck.test($(handle).val()))
                                    error = 'wrong';
                            }
                            if (format === 'required-email') {
                                var regCheck = new RegExp("^([0-9a-zA-Z]+[-._+&amp;])*[0-9a-zA-Z]+@([-0-9a-zA-Z]+[.])+[a-zA-Z]{2,6}$");
                                if (!regCheck.test($(handle).val()))
                                    error = 'wrong';
                            }
                        }
                        break;
                }
                if (!error && $(handle).attr('confirmInfo') && $(handle).attr('confirmInfo').indexOf('self') !== -1 && $(handle).attr('checkforconfirm').indexOf('group') !== -1)//выводим хинт для уникального множественного ошибки
                {
                    var title = " значение поля";//подпись к пункту
                    if (typeof $(handle).attr('title') !== 'undefined' && $(handle).attr('title').length > 0)
                        title = $(handle).attr('title');
                    $($(handle).attr('confirmInfo').substr(4)).after("<div class='wrong-text'>" + title + "</div>");
                }
                if (error === 'wrong' && $(handle).attr('confirmInfo') && $(handle).attr('checkforconfirm').indexOf('group') !== -1)//выводим хинт для уникального множественного оказии
                {
                    $($(handle).attr('confirmInfo').substr(4)).after("<div class='wrong-text'>Неверное значение поля</div>");
                }
                return error;

            }

            function prepareChecking(handle)// запускает проверку конкретного элемента и маркерует ошибочные
            {
                var error = true;//возвращаемое значение; смысл - просто показать, что есть ошибка принимает значение: true - нет ошибок; false - поле не заполнено; 'wrong' - поле заполнено неправильно; 'radio' - радиокнопка отмечена и нет ошибок
                var title = " значение поля " + $(handle).attr('placeholder');//подпись к пункту
                if (typeof $(handle).attr('title') !== 'undefined' && $(handle).attr('title').length > 0) {
                    title = $(handle).attr('title');
                }
                var after = handle;//куда лепить
                var attribute = String($(handle).attr('class').split(' ').filter(function (e) {
                    return e.indexOf('required') !== -1
                }));

                if (attribute.indexOf('group') !== -1)//группа
                {
                    var groupIndex = String(attribute.split('_').filter(function (e) {
                        return e.indexOf('group') !== -1
                    })).slice(5);
                    $("[class*='group" + groupIndex + "']").each(function () {
                        error = checkFullness(this);
                        switch (error) {
                            case true :
                                error = checkFullness(this);
                                break;
                            case 'radio' :
                                if (checkFullness(this) === 'wrong') error = false;
                                break;//???
                            case false :
                                if (checkFullness(this) === 'radio') {
                                    error = 'radio';
                                }
                                $("[class*='group" + groupIndex + "']").each(function () {
                                    if ($(this).val() != 0) {
                                        error = true;
                                    }
                                });
                                if (checkFullness(this) === 'radio') {
                                    error = 'radio';
                                }
                                break;

                            default:
                                checkFullness(this);
                                break;
                        }

                        if (error !== true && error !== 'radio') {
                            $("[class*='group" + groupIndex + "']").each(function () {
                                if (typeof $(this).attr('title') !== 'undefined') {
                                    title = $(this).attr('title');
                                }
                                after = $(this).attr('confirmInfo');
                            });

                            if (error === 'wrong')
                                $(after).after("<div class='wrong-text'>Неверное значение поля</div>");
                            else
                                $(after).after("<div class='wrong-text'>" + title + "</div>");//html ошибки

                            $("[class*='group" + groupIndex + "']").each(function () {
                                $(this).addClass(classError);//добавление класса всей группе
                            });
                            error = false;
                        }

                        if (error === 'radio')//Радио значит всё хорошо
                            error = true;
                    });
                } else { //одиночное
                    error = checkFullness(handle);
                    if (error) {
                    }
                    if (!error || error == 'wrong') {
                        if (typeof $(handle).attr('confirmInfo') !== 'undefined' && $(handle).attr('confirmInfo').length > 0) {
                            after = $(handle).attr('confirmInfo');
                        }
                        if (typeof $(handle).attr('title') !== 'undefined') {
                            if (typeof $(handle).attr('confirmInfo') !== 'undefined' && $(handle).attr('confirmInfo').length > 0) {
                                if (error === 'wrong')
                                    $(after).append("<div class='wrong-text'>Неверное значение поля</div>");
                                else
                                    $(after).append("<div class='wrong-text'>" + title + "</div>");//html ошибки в указаном блоке
                            } else {
                                if (error === 'wrong')
                                    $(after).after("<div class='wrong-text'>Неверное значение поля</div>");
                                else
                                    $(after).after("<div class='wrong-text'>" + title + "</div>");//html ошибки под блоком объекта
                            }
                        }
                        $(handle).addClass(classError).parent().addClass(classError);//добавление класса
                        error = false;
                    }
                }
                return error;
            }

            function checktrueAttr(form) { //подготавливает данные
                var error = true, classError = 'wrong';
                checkedGroups = ',';
                $('div.wrong-text').remove();//убираем сообщения ошибок если такие есть
                $('.' + classError).each(function () {
                    $(this).removeClass(classError);
                });//убираем подсветку ошибок
                $(form).find('[class *= "required"]').each(function () {//Перебираем объекты нуждающиеся в обязательном заполнении
                    if (error) error = prepareChecking(this);
                    else prepareChecking(this);
                });
                return error;
                // return false;
            }

            if (checktrueAttr(form)) {
                let formData = new FormData(form.get(0)); // создаем новый экземпляр объекта и передаем ему нашу форму (*)
                formData.append('template', form.attr('name'));
                $.get('/index.php?route=sendform/sendform/getHash',function(data){
                formData.append('hash',data);
                var method, action;
                if (form.attr('method') != undefined) {
                    method = form.attr('method');
                } else {
                    method = 'POST';
                }
                ;
                if (form.attr('action') != undefined) {
                    action = form.attr('action');
                } else {
                    action = '/index.php?route=sendform/sendform';
                }

                $.ajax({ // инициaлизируeм ajax зaпрoс
                    url: action,
                    type: method,
                    contentType: false, // важно - убираем форматирование данных по умолчанию
                    processData: false, // важно - убираем преобразование строк по умолчанию
                    dataType: 'json', // oтвeт ждeм в json фoрмaтe
                    data: formData, // дaнныe для oтпрaвки
                    beforeSend: function (data) { // сoбытиe дo oтпрaвки
                        form.find('button').prop('disabled', true); // нaпримeр, oтключим кнoпку, чтoбы нe жaли пo 100 рaз
                        preloader.start();
                    },
                    success: function (data) { // сoбытиe пoслe удaчнoгo oбрaщeния к сeрвeру и пoлучeния oтвeтa
                        form[0].reset();
                        $(form).addClass('sent');
                        $(form).find('.fw-placeholder').removeClass('active');

                        if (!$(form).find('.response').length) {
                            if (data['response']) {
                                $(form).append('<div class="response">' + data['response'] + '</div>');
                            } else {
                                var response = '<div><h4 class="h24">Ваша заявка отправлена</h4><p>Наш менеджер свяжется с Вами в ближайшее время</p></div>';
                                $(form).append('<div class="response">' + response + '</div>');
                            }

                        }

                        var $form = $(form);

                        setTimeout(function () {
                            if (!$form.parents('.float-box_inset').length <= 0) {
                            $form.removeClass('sent');
                            $form.parents('.float-box').find('.exit').click();
                            }
                        }, 5000);

    /*                     $('.exit').click(function () {
                            $(form).removeClass('sent');
                        }); */

                    },
                    error: function (xhr, ajaxOptions, thrownError) { // в случae нeудaчнoгo зaвeршeния зaпрoсa к сeрвeру
                        console.log(xhr, ajaxOptions, thrownError);

                        /* form[0].reset(); */
                        $(form).addClass('error');
                        /* $(form).find('.fw-placeholder').removeClass('active'); */

                        if (!$(form).find('.errortext').length <= 0) {

                            $(form).append('<div class="errortext"><div><h3 class="h32">Ошибка отправки</h3><p>При отправке формы произошла ошибка. Пожалуйста, попробуйте еще раз позже.</p></div></div><div class="exit"></div>');

                            var $form = $(form);

                            $('.exit').click(function () {
                                $(form).removeClass('error');
                            });
                        }

                    },
                    complete: function (data) { // сoбытиe пoслe любoгo исхoдa
                        form.find('button').prop('disabled', false); // в любoм случae включим кнoпку oбрaтнo
                        $(form).find('.fw-placeholder').removeClass('active');

                        preloader.stop();
                    }
                });
                });
            }
            return false;
        });//function-send

    });//document.ready
    !function(a,b){if("function"==typeof define&&define.amd)define(["module","exports"],b);else if("undefined"!=typeof exports)b(module,exports);else{var c={exports:{}};b(c,c.exports),a.WOW=c.exports}}(this,function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function d(a,b){return b.indexOf(a)>=0}function e(a,b){for(var c in b)if(null==a[c]){var d=b[c];a[c]=d}return a}function f(a){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(a)}function g(a){var b=arguments.length<=1||void 0===arguments[1]?!1:arguments[1],c=arguments.length<=2||void 0===arguments[2]?!1:arguments[2],d=arguments.length<=3||void 0===arguments[3]?null:arguments[3],e=void 0;return null!=document.createEvent?(e=document.createEvent("CustomEvent"),e.initCustomEvent(a,b,c,d)):null!=document.createEventObject?(e=document.createEventObject(),e.eventType=a):e.eventName=a,e}function h(a,b){null!=a.dispatchEvent?a.dispatchEvent(b):b in(null!=a)?a[b]():"on"+b in(null!=a)&&a["on"+b]()}function i(a,b,c){null!=a.addEventListener?a.addEventListener(b,c,!1):null!=a.attachEvent?a.attachEvent("on"+b,c):a[b]=c}function j(a,b,c){null!=a.removeEventListener?a.removeEventListener(b,c,!1):null!=a.detachEvent?a.detachEvent("on"+b,c):delete a[b]}function k(){return"innerHeight"in window?window.innerHeight:document.documentElement.clientHeight}Object.defineProperty(b,"__esModule",{value:!0});var l,m,n=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),o=window.WeakMap||window.MozWeakMap||function(){function a(){c(this,a),this.keys=[],this.values=[]}return n(a,[{key:"get",value:function(a){for(var b=0;b<this.keys.length;b++){var c=this.keys[b];if(c===a)return this.values[b]}}},{key:"set",value:function(a,b){for(var c=0;c<this.keys.length;c++){var d=this.keys[c];if(d===a)return this.values[c]=b,this}return this.keys.push(a),this.values.push(b),this}}]),a}(),p=window.MutationObserver||window.WebkitMutationObserver||window.MozMutationObserver||(m=l=function(){function a(){c(this,a),"undefined"!=typeof console&&null!==console&&(console.warn("MutationObserver is not supported by your browser."),console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content."))}return n(a,[{key:"observe",value:function(){}}]),a}(),l.notSupported=!0,m),q=window.getComputedStyle||function(a){var b=/(\-([a-z]){1})/g;return{getPropertyValue:function(c){"float"===c&&(c="styleFloat"),b.test(c)&&c.replace(b,function(a,b){return b.toUpperCase()});var d=a.currentStyle;return(null!=d?d[c]:void 0)||null}}},r=function(){function a(){var b=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];c(this,a),this.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0,callback:null,scrollContainer:null,resetAnimation:!0},this.animate=function(){return"requestAnimationFrame"in window?function(a){return window.requestAnimationFrame(a)}:function(a){return a()}}(),this.vendors=["moz","webkit"],this.start=this.start.bind(this),this.resetAnimation=this.resetAnimation.bind(this),this.scrollHandler=this.scrollHandler.bind(this),this.scrollCallback=this.scrollCallback.bind(this),this.scrolled=!0,this.config=e(b,this.defaults),null!=b.scrollContainer&&(this.config.scrollContainer=document.querySelector(b.scrollContainer)),this.animationNameCache=new o,this.wowEvent=g(this.config.boxClass)}return n(a,[{key:"init",value:function(){this.element=window.document.documentElement,d(document.readyState,["interactive","complete"])?this.start():i(document,"DOMContentLoaded",this.start),this.finished=[]}},{key:"start",value:function(){var a=this;if(this.stopped=!1,this.boxes=[].slice.call(this.element.querySelectorAll("."+this.config.boxClass)),this.all=this.boxes.slice(0),this.boxes.length)if(this.disabled())this.resetStyle();else for(var b=0;b<this.boxes.length;b++){var c=this.boxes[b];this.applyStyle(c,!0)}if(this.disabled()||(i(this.config.scrollContainer||window,"scroll",this.scrollHandler),i(window,"resize",this.scrollHandler),this.interval=setInterval(this.scrollCallback,50)),this.config.live){var d=new p(function(b){for(var c=0;c<b.length;c++)for(var d=b[c],e=0;e<d.addedNodes.length;e++){var f=d.addedNodes[e];a.doSync(f)}});d.observe(document.body,{childList:!0,subtree:!0})}}},{key:"stop",value:function(){this.stopped=!0,j(this.config.scrollContainer||window,"scroll",this.scrollHandler),j(window,"resize",this.scrollHandler),null!=this.interval&&clearInterval(this.interval)}},{key:"sync",value:function(){p.notSupported&&this.doSync(this.element)}},{key:"doSync",value:function(a){if("undefined"!=typeof a&&null!==a||(a=this.element),1===a.nodeType){a=a.parentNode||a;for(var b=a.querySelectorAll("."+this.config.boxClass),c=0;c<b.length;c++){var e=b[c];d(e,this.all)||(this.boxes.push(e),this.all.push(e),this.stopped||this.disabled()?this.resetStyle():this.applyStyle(e,!0),this.scrolled=!0)}}}},{key:"show",value:function(a){return this.applyStyle(a),a.className=a.className+" "+this.config.animateClass,null!=this.config.callback&&this.config.callback(a),h(a,this.wowEvent),this.config.resetAnimation&&(i(a,"animationend",this.resetAnimation),i(a,"oanimationend",this.resetAnimation),i(a,"webkitAnimationEnd",this.resetAnimation),i(a,"MSAnimationEnd",this.resetAnimation)),a}},{key:"applyStyle",value:function(a,b){var c=this,d=a.getAttribute("data-wow-duration"),e=a.getAttribute("data-wow-delay"),f=a.getAttribute("data-wow-iteration");return this.animate(function(){return c.customStyle(a,b,d,e,f)})}},{key:"resetStyle",value:function(){for(var a=0;a<this.boxes.length;a++){var b=this.boxes[a];b.style.visibility="visible"}}},{key:"resetAnimation",value:function(a){if(a.type.toLowerCase().indexOf("animationend")>=0){var b=a.target||a.srcElement;b.className=b.className.replace(this.config.animateClass,"").trim()}}},{key:"customStyle",value:function(a,b,c,d,e){return b&&this.cacheAnimationName(a),a.style.visibility=b?"hidden":"visible",c&&this.vendorSet(a.style,{animationDuration:c}),d&&this.vendorSet(a.style,{animationDelay:d}),e&&this.vendorSet(a.style,{animationIterationCount:e}),this.vendorSet(a.style,{animationName:b?"none":this.cachedAnimationName(a)}),a}},{key:"vendorSet",value:function(a,b){for(var c in b)if(b.hasOwnProperty(c)){var d=b[c];a[""+c]=d;for(var e=0;e<this.vendors.length;e++){var f=this.vendors[e];a[""+f+c.charAt(0).toUpperCase()+c.substr(1)]=d}}}},{key:"vendorCSS",value:function(a,b){for(var c=q(a),d=c.getPropertyCSSValue(b),e=0;e<this.vendors.length;e++){var f=this.vendors[e];d=d||c.getPropertyCSSValue("-"+f+"-"+b)}return d}},{key:"animationName",value:function(a){var b=void 0;try{b=this.vendorCSS(a,"animation-name").cssText}catch(c){b=q(a).getPropertyValue("animation-name")}return"none"===b?"":b}},{key:"cacheAnimationName",value:function(a){return this.animationNameCache.set(a,this.animationName(a))}},{key:"cachedAnimationName",value:function(a){return this.animationNameCache.get(a)}},{key:"scrollHandler",value:function(){this.scrolled=!0}},{key:"scrollCallback",value:function(){if(this.scrolled){this.scrolled=!1;for(var a=[],b=0;b<this.boxes.length;b++){var c=this.boxes[b];if(c){if(this.isVisible(c)){this.show(c);continue}a.push(c)}}this.boxes=a,this.boxes.length||this.config.live||this.stop()}}},{key:"offsetTop",value:function(a){for(;void 0===a.offsetTop;)a=a.parentNode;for(var b=a.offsetTop;a.offsetParent;)a=a.offsetParent,b+=a.offsetTop;return b}},{key:"isVisible",value:function(a){var b=a.getAttribute("data-wow-offset")||this.config.offset,c=this.config.scrollContainer&&this.config.scrollContainer.scrollTop||window.pageYOffset,d=c+Math.min(this.element.clientHeight,k())-b,e=this.offsetTop(a),f=e+a.clientHeight;return d>=e&&f>=c}},{key:"disabled",value:function(){return!this.config.mobile&&f(navigator.userAgent)}}]),a}();b["default"]=r,a.exports=b["default"]});

$(window).on('load', function(){
    new WOW({
      mobile: false,
    }).init();
});
document.addEventListener('DOMContentLoaded', () => {
        !function(a){"function"==typeof define&&define.amd?define(["jquery"],a):a("object"==typeof exports?require("jquery"):jQuery)}(function(a){var b,c=navigator.userAgent,d=/iphone/i.test(c),e=/chrome/i.test(c),f=/android/i.test(c);a.mask={definitions:{9:"[0-9]",a:"[A-Za-z]","*":"[A-Za-z0-9]"},autoclear:!0,dataName:"rawMaskFn",placeholder:"_"},a.fn.extend({caret:function(a,b){var c;if(0!==this.length&&!this.is(":hidden"))return"number"==typeof a?(b="number"==typeof b?b:a,this.each(function(){this.setSelectionRange?this.setSelectionRange(a,b):this.createTextRange&&(c=this.createTextRange(),c.collapse(!0),c.moveEnd("character",b),c.moveStart("character",a),c.select())})):(this[0].setSelectionRange?(a=this[0].selectionStart,b=this[0].selectionEnd):document.selection&&document.selection.createRange&&(c=document.selection.createRange(),a=0-c.duplicate().moveStart("character",-1e5),b=a+c.text.length),{begin:a,end:b})},unmask:function(){return this.trigger("unmask")},mask:function(c,g){var h,i,j,k,l,m,n,o;if(!c&&this.length>0){h=a(this[0]);var p=h.data(a.mask.dataName);return p?p():void 0}return g=a.extend({autoclear:a.mask.autoclear,placeholder:a.mask.placeholder,completed:null},g),i=a.mask.definitions,j=[],k=n=c.length,l=null,a.each(c.split(""),function(a,b){"?"==b?(n--,k=a):i[b]?(j.push(new RegExp(i[b])),null===l&&(l=j.length-1),k>a&&(m=j.length-1)):j.push(null)}),this.trigger("unmask").each(function(){function h(){if(g.completed){for(var a=l;m>=a;a++)if(j[a]&&C[a]===p(a))return;g.completed.call(B)}}function p(a){return g.placeholder.charAt(a<g.placeholder.length?a:0)}function q(a){for(;++a<n&&!j[a];);return a}function r(a){for(;--a>=0&&!j[a];);return a}function s(a,b){var c,d;if(!(0>a)){for(c=a,d=q(b);n>c;c++)if(j[c]){if(!(n>d&&j[c].test(C[d])))break;C[c]=C[d],C[d]=p(d),d=q(d)}z(),B.caret(Math.max(l,a))}}function t(a){var b,c,d,e;for(b=a,c=p(a);n>b;b++)if(j[b]){if(d=q(b),e=C[b],C[b]=c,!(n>d&&j[d].test(e)))break;c=e}}function u(){var a=B.val(),b=B.caret();if(o&&o.length&&o.length>a.length){for(A(!0);b.begin>0&&!j[b.begin-1];)b.begin--;if(0===b.begin)for(;b.begin<l&&!j[b.begin];)b.begin++;B.caret(b.begin,b.begin)}else{for(A(!0);b.begin<n&&!j[b.begin];)b.begin++;B.caret(b.begin,b.begin)}h()}function v(){A(),B.val()!=E&&B.change()}function w(a){if(!B.prop("readonly")){var b,c,e,f=a.which||a.keyCode;o=B.val(),8===f||46===f||d&&127===f?(b=B.caret(),c=b.begin,e=b.end,e-c===0&&(c=46!==f?r(c):e=q(c-1),e=46===f?q(e):e),y(c,e),s(c,e-1),a.preventDefault()):13===f?v.call(this,a):27===f&&(B.val(E),B.caret(0,A()),a.preventDefault())}}function x(b){if(!B.prop("readonly")){var c,d,e,g=b.which||b.keyCode,i=B.caret();if(!(b.ctrlKey||b.altKey||b.metaKey||32>g)&&g&&13!==g){if(i.end-i.begin!==0&&(y(i.begin,i.end),s(i.begin,i.end-1)),c=q(i.begin-1),n>c&&(d=String.fromCharCode(g),j[c].test(d))){if(t(c),C[c]=d,z(),e=q(c),f){var k=function(){a.proxy(a.fn.caret,B,e)()};setTimeout(k,0)}else B.caret(e);i.begin<=m&&h()}b.preventDefault()}}}function y(a,b){var c;for(c=a;b>c&&n>c;c++)j[c]&&(C[c]=p(c))}function z(){B.val(C.join(""))}function A(a){var b,c,d,e=B.val(),f=-1;for(b=0,d=0;n>b;b++)if(j[b]){for(C[b]=p(b);d++<e.length;)if(c=e.charAt(d-1),j[b].test(c)){C[b]=c,f=b;break}if(d>e.length){y(b+1,n);break}}else C[b]===e.charAt(d)&&d++,k>b&&(f=b);return a?z():k>f+1?g.autoclear||C.join("")===D?(B.val()&&B.val(""),y(0,n)):z():(z(),B.val(B.val().substring(0,f+1))),k?b:l}var B=a(this),C=a.map(c.split(""),function(a,b){return"?"!=a?i[a]?p(b):a:void 0}),D=C.join(""),E=B.val();B.data(a.mask.dataName,function(){return a.map(C,function(a,b){return j[b]&&a!=p(b)?a:null}).join("")}),B.one("unmask",function(){B.off(".mask").removeData(a.mask.dataName)}).on("focus.mask",function(){if(!B.prop("readonly")){clearTimeout(b);var a;E=B.val(),a=A(),b=setTimeout(function(){B.get(0)===document.activeElement&&(z(),a==c.replace("?","").length?B.caret(0,a):B.caret(a))},10)}}).on('click',function(){
                                                if (!B.prop("readonly")) {
                                                        clearTimeout(b);
                                                        var a;
                                                        E = B.val(),
                                                        a = A(),
                                                        b = setTimeout(function () {
                                                                B.get(0) === document.activeElement && (z(), a == c.replace("?", "").length ? B.caret(0, a) : B.caret(a))
                                                        }, 10)
                                                }
                                        }).on("blur.mask",v).on("keydown.mask",w).on("keypress.mask",x).on("input.mask paste.mask",function(){B.prop("readonly")||setTimeout(function(){var a=A(!0);B.caret(a),h()},0)}),e&&f&&B.off("input.mask").on("input.mask",u),A()})}})});
        $(document).ready(function(){
                $('input[name=phone],input[name=telephone]').mask("+7 (999) 999-99-99");
        });
});
document.addEventListener('DOMContentLoaded', () => {
    if(document.querySelector('.js-textWrap')) {
        let textWrap = document.querySelectorAll('.js-textWrap');
        textWrap.forEach(function(elem) {
            let textMaxHeight = getComputedStyle(elem).maxHeight;
            textMaxHeight = parseInt(textMaxHeight, 10);
            let textHeight = elem.scrollHeight;
            let btnMore = elem.nextElementSibling;
            if (textHeight > textMaxHeight) {
                btnMore.classList.add('show')
            }
            function showMoreText() {
                if (btnMore.classList.contains('js-lessText')) {
                    elem.classList.remove('open')
                    btnMore.innerHTML = 'Подробнее';
                    btnMore.classList.remove('js-lessText')
                } else {
                    elem.classList.add('open')
                    btnMore.innerHTML = 'Скрыть';
                    btnMore.classList.add('js-lessText')
                }
            }
            btnMore.addEventListener("click", showMoreText);
        })
    }
})
document.addEventListener('DOMContentLoaded', () => {
    if ($('.page').length) {
        let content = $('.page');
        let tables = content.find('table');
        let pImg = content.find('p > img');
        let img = content.find('img');
        let iframe = content.find('p > iframe');
        let video = content.find('p > video');
        tables.wrap('<div class="page-table">');
        pImg.parent().addClass('page-img')
        img.addClass('page-img')
        iframe.parent().addClass('page-img')
        iframe.parent().addClass('page-iframe')
        video.parent().addClass('page-img')
    }
});
document.addEventListener('DOMContentLoaded', () => {
    if(document.querySelector('.js-popupOpen')) {
        let popupOpeners = document.querySelectorAll('.js-popupOpen');
        popupOpeners.forEach(function(elem) {
            function showPopup() {
                let popups = document.querySelectorAll('.js-popup');
                popups.forEach(function(elem) {
                    elem.classList.add('js-hide');
                    wrapperUnfixPosition();
                })
                let popupId= elem.getAttribute('data-popup');
                let popup = document.querySelector('#' + popupId);
                popup.classList.remove('js-hide');
                popup.classList.add('js-block');
                wrapperFixPosition();
            }
        elem.addEventListener("click", showPopup);
        })
    }
    if(document.querySelector('.js-popupClose')) {
        let popupClose = document.querySelectorAll('.js-popupClose');
        popupClose.forEach(function(elem) {
            function closePopup() {
                elem.closest('.js-popup').classList.remove('js-block');
                elem.closest('.js-popup').classList.add('js-hide');
                wrapperUnfixPosition();
            }
        elem.addEventListener("click", closePopup);
        })
    }
    document.addEventListener('keydown', function(e) {
        let popups = document.querySelectorAll('.js-popup');
        if( e.keyCode == 27 ){ 
            popups.forEach(function(elem) {
                elem.classList.remove('js-block');
                elem.classList.add('js-hide');
                wrapperUnfixPosition();
            })
        }
    });
    $('.js-closeVideo').on('click', function () {
        $(".js-popup iframe").attr("src", $(".js-popup iframe").attr("src"));
        $(".js-popup video").attr("src", $(".js-popup video").attr("src"));
    });
    $(document).keydown(function(e) {
        if (e.keyCode == 27) {
            $(".js-popup iframe").attr("src", $(".js-popup iframe").attr("src"));
            $(".js-popup video").attr("src", $(".js-popup video").attr("src"));
        }
    });
});

function wrapperFixPosition() {
    const fixBlocks = document.querySelectorAll('.js-fixBlock');
    let paddingOffset = window.innerWidth - document.querySelector('body').offsetWidth + 'px'; 
    setTimeout( function() {
        if ( !document.querySelector('body').hasAttribute('wrapper-body-scroll-fix') ) {
            let scrollPosition = window.pageYOffset || document.documentElement.scrollTop;
            fixBlocks.forEach((el) => {
                el.style.paddingRight = paddingOffset;
            });
            document.querySelector('body').style.overflow = 'hidden';
            document.querySelector('body').setAttribute('wrapper-body-scroll-fix', scrollPosition);
            document.querySelector('body').style.overflow = 'hidden';
            document.querySelector('body').style.position = 'fixed';
            document.querySelector('body').style.top = '-' + scrollPosition + 'px';
            document.querySelector('body').style.left = '0';
            document.querySelector('body').style.width = '100%';
            document.querySelector('body').style.paddingRight = paddingOffset;
            document.querySelector('header').style.display = "none";
        }
    }, 15 ); 
}
function wrapperUnfixPosition() {
    const fixBlocks = document.querySelectorAll('.js-fixBlock');
    if ( document.querySelector('body').hasAttribute('wrapper-body-scroll-fix') ) {
        let scrollPosition = document.querySelector('body').getAttribute('wrapper-body-scroll-fix');
        document.querySelector('body').removeAttribute('wrapper-body-scroll-fix');
        document.querySelector('body').style.overflow = '';
        document.querySelector('body').style.position = '';
        document.querySelector('body').style.top = '';
        document.querySelector('body').style.left = '';
        document.querySelector('body').style.width = '';
        document.querySelector('header').style.display = "";
        window.scroll(0, scrollPosition);
        fixBlocks.forEach((el) => {
            el.style.paddingRight = '0px';
        });
        document.querySelector('body').style.paddingRight = '0px';
    }
}
document.addEventListener('DOMContentLoaded', () => {
  function gallaryZoom(){
    $('.js-productSlider').addClass('zoom');
    $('.js-productSliderNav').addClass('zoom');
    $('.js-productGallary').addClass('zoom');
    $('.js-sliderZoom').addClass('zoom');
  }
  function gallaryZoomOut(){
    $('.js-productSlider').removeClass('zoom');
    $('.js-productSliderNav').removeClass('zoom');
    $('.js-productGallary').removeClass('zoom');
    $('.js-sliderZoom').removeClass('zoom');
  }
  $(document).mouseup( function(e){ 
    var div = $( ".js-productSlider.zoom" ); 
    if ( !div.is(e.target) 
        && div.has(e.target).length === 0 ) { 
        gallaryZoomOut(); 
    }
  });
  $('.js-productSlide').on("click", function () {
      gallaryZoom()
  });
  $('.js-sliderZoom').on("click", function () {
    if ($('.js-productSlider').hasClass('zoom')) {
      gallaryZoomOut()
    } else {
      gallaryZoom()
    }
  });
  $(document).keyup(function(e) {
    if (e.key === "Escape" || e.keyCode === 27) {
      gallaryZoomOut()
    }
  });
})
document.addEventListener('DOMContentLoaded', () => {
    if(document.querySelector('.js-tabMenu')) {
        let tab = document.querySelector('.product__tab-content');
        tab.classList.add('is-show')
        let tabs = document.querySelectorAll('.js-tabItem');
        tabs.forEach(function(elem) {
            let tabItem = elem;
            function showContent() {
                let tabId = tabItem.id;
                let tabCollections = document.querySelectorAll(`[data-tab`);
                let tabContent = document.querySelector(`[data-tab="${tabId}"]`);
                tabCollections.forEach(function(elem) {
                    elem.classList.remove('is-show');
                })
                tabContent.classList.toggle('is-show');
            }
            elem.addEventListener("click", showContent);
        })
    }
    if(document.querySelector('.js-tabOpen')) {
        let tabOpen = document.querySelectorAll('.js-tabOpen');
        tabOpen.forEach(function(elem) {
            function showContent() {
                elem.classList.toggle('active');
            }
            elem.addEventListener("click", showContent);
        })
    }
})
$(function()
{
  'use strict';
  //Создаём полупрозрачный серый фон на заднем плане под увеличенным изображением.
  //Он будет перекрывать все элементы экрана.
  const imgBg = document.createElement('div');
  document.getElementsByTagName('body')[0].appendChild(imgBg);
  imgBg.style = 'background-color: rgba(48, 48, 48, 0.6); position: fixed; top: 0px; left: 0px; width: 100%; z-index: 1';
  imgBg.hidden = true;
  fillBg(); //Функция, которая растягивает серый фон по высоте на весь экран.
  //Перерисовываем высоту серого фона при изменении размеров окна браузера.
  window.addEventListener('resize', fillBg);
  function fillBg()
  {
    imgBg.style.height = (document.documentElement.clientHeight + 100) + 'px';
  }
  
  //Определяем долю от размера экрана, которую будет занимать увеличенное изображение
  let bigImgageScreenFraction;
  if (window.matchMedia('(max-width: 1080px)').matches) //Зашли с мобильного.
  {
    bigImgageScreenFraction = 1.0;
  }
  else //Зашли с компьютера.
  {
    bigImgageScreenFraction = 0.7;
  }
  //Заглушка для картинки. Появляется вместо неё на том месте откуда она увеличилась.
  let placeholder = document.createElement('img');
  document.querySelectorAll('img[scalable]').forEach((img) =>
  {
    const smallSize = img.getAttribute('scalable');
    let defaultStyle = `max-width: ${smallSize}; max-height: ${smallSize}`;
    img.style = defaultStyle;
    let isGoingToSmall = false;
    img.addEventListener('click', () => 
    {
      if (img.getAttribute('is-big') === 'true') //Картинка большая - уменьшаем
      {
        //Смотрим по каким координатам надо вернуть картинку на место.
        let coords = placeholder.getBoundingClientRect();
        //Устанавливаем для изображения уменьшенный размер.
        //Но position остаётся fixed, т.к. нужно, чтобы при анимации уменьшения не смещались остальные элементы страницы.
        img.style = `${defaultStyle}; position: fixed; left: ${coords.left}px; top: ${coords.top}px`;
        img.setAttribute('is-big', false);
        imgBg.hidden = true;
        //Указываем, что мы собираемся уменьшить картинку.
        //Эта переменная опять станет false, когда завершится анимация уменьшения.
        isGoingToSmall = true;
      }
      else //Картинка маленькая - увеличиваем.
      {
        imgBg.hidden = false;
        img.setAttribute('is-big', true);
        //Перед тем как увеличить картинку вставляем вместо неё заглушку.
        placeholder.hidden = false;
        placeholder.style = `width: ${img.width}px; height: ${img.height}px; background-color: rgb(200, 200, 200)`;
        img.before(placeholder);
        //Увеличиваем картинку.
        doImageBig(img);
      }
    });
    img.addEventListener('transitionend', () =>
    {
      if (isGoingToSmall) //Отследили завершение анимации уменьшения.
      {
        //Вставляем картинку обратно в поток.
        img.style = defaultStyle;
        isGoingToSmall = false;
        //Убираем заглушку.
        placeholder.hidden = true;
      }
    }); 
    //Сохраняем центровку увеличенной картинки при изменении размеров окна браузера.
    window.addEventListener('resize', () => 
    {
      if (img.getAttribute('is-big') === 'true') doImageBig(img);
    });
  });
  
  //Эта функция расчитывает размеры увеличенного изображения и центрирует его.
  function doImageBig(img)
  {
    let screenHeight = document.documentElement.clientHeight;
    let screenWidth = document.documentElement.clientWidth;
    let imgWidth = img.width;
    let imgHeight = img.height;
    let bigImgHeight = Math.round(screenHeight * bigImgageScreenFraction);
    let bigImgWidth = Math.round(screenWidth * bigImgageScreenFraction);
    let ratio = imgWidth / imgHeight
    let newWidth = Math.round(bigImgHeight * ratio);
    if (newWidth < bigImgWidth)
    {
      bigImgWidth = newWidth;
    }
    else
    {
      bigImgHeight = Math.round(bigImgWidth / ratio);
    }
    let left = Math.round(0.5 * (screenWidth - bigImgWidth));
    let top = Math.round(0.5 * (screenHeight - bigImgHeight));
    img.style = `max-width: ${bigImgWidth}px; max-height: ${bigImgHeight}px; left: ${left}px; top: ${top}px; position: fixed; z-index: 1000000`;
  }
});